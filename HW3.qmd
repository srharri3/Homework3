---
title: "HW3"
format: html
editor: visual
---

# Homework 3

```{r}
load("hw2_list.rda")
```

# Task 1: Control Flow Practice
```{r}
bp_list$treatment$status <- character(20)
bp_list$placebo$status <- character(10)
```
Create a for loop and use if/then/else logic to create the status column’s values for treatment.
```{r}
status_list <- c()
for (i in bp_list$treatment$post_bp) {
  if (i <= 120) {
    status_list <- append(status_list,"optimal")
  } else if (i > 120 & i <= 130) {
   status_list <- append(status_list,"borderline")
  } else  {status_list <- append(status_list,"high")
  }}
bp_list$treatment$status <- status_list
```
Create a for loop and use if/then/else logic to create the status column’s values for placebo.
```{r}
status_list2 <- c()
for (i in bp_list$placebo$post_bp) {
  if (i <= 120) {
    status_list2 <- append(status_list2,"optimal")
  } else if (i > 120 & i <= 130) {
   status_list2 <- append(status_list2,"borderline")
  } else  {status_list2 <- append(status_list2,"high")
  }}
bp_list$placebo$status <- status_list2
```

# Task 2: Function Writing
Creating function with default value set to mean. Getting the function from the quoted string using my_fun <- get(stat). Returning a named list with stat values.
```{r}
summary_stats <- function(bp_list, stat = "mean") {
 my_fun <- get(stat)

 treatment <- bp_list[[1]]
 placebo <- bp_list[[2]]
 
 treatment_pre_stat <- my_fun(treatment$pre_bp, na.rm = TRUE)
 treatment_post_stat <- my_fun(treatment$post_bp, na.rm = TRUE)
 treatment_diff_stat <- my_fun(placebo$diff_bp, na.rm = TRUE)
 
 placebo_pre_stat <- my_fun(placebo$pre_bp, na.rm = TRUE)
 placebo_post_stat <- my_fun(placebo$post_bp, na.rm = TRUE)
 placebo_diff_stat <- my_fun(placebo$diff_bp, na.rm = TRUE)

 stat_names <- c(
  paste0(stat, "TreatmentPre"),
   paste0(stat, "TreatmentPost"),
   paste0(stat, "TreatmentDiff"),
   paste0(stat, "PlaceboPre"),
   paste0(stat, "PlaceboPost"),
   paste0(stat, "PlaceboDiff")
  )
 
 stat_values <- c(
  treatment_pre_stat,
  treatment_post_stat,
  treatment_diff_stat,
  placebo_pre_stat,
  placebo_post_stat,
  placebo_diff_stat
)
 
 names(stat_values) <- stat_names
 
 return(stat_values)
}
```

Applying function to list of data frames.
```{r}
var_stat <- summary_stats(bp_list, "var")
print(var_stat)

sd_stat <- summary_stats(bp_list, "sd")
print(sd_stat)

min_stat <- summary_stats(bp_list, "sd")
print(min_stat)

max_stat <- summary_stats(bp_list, "max")
print(max_stat)
```

